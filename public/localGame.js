/* localGame.js
    implement a backend for a game that is hosted locally; since there is no 
    networking to pass information over, moves are passed directly back into
    the game logic's move processing
*/

/* the current move id; since each move must have a unique id and moves are
generated by a single source in a local game, this is just incremented after
every move*/
var localMoveIndex = 0; 

/* localMovePostFunc
    implement postMove for a local game

    info: a dictionary describing a valid move
*/
function localMovePostFunc(info) {
    // pass the move directly to the move receiving function (there is no
    // backend it has to be passed to), and increment localMoveIndex afterward
    receiveMove(String(localMoveIndex++), info);
}

/* localMoveProcessingFunc
    implement processMove for a local game

    moveID: the unique ID of the move
    info: dictionary describing a valid move
*/
function localMoveProcessingFunc(moveID, info) {
    // process game creation moves
    if (info.action == 'create') {
        // enter the game screen and setup the specific game
        page_setScreen('game');
        game_catalog[info.game].setupFunc(moveID, info);
    }
}

/* buildLocalGame
    initialize a local game

    game: string of the game's name
    nPlayers: number of players; nPlayers - 1 AI players will be generated
*/
function buildLocalGame(game, nPlayers) {
    console.log(nPlayers);
    if (nPlayers) {
        // set player 0 as self
        self_playerID = '0';
        game_playerIDs = ['0'];
        game_aiPlayers = [];
        game_playerNames = {
            '0' : 'You'
        };

        // initialize players 1 through (nPlayers - 1) as AI players
        for (var i = 1; i < nPlayers; i++) {
            var id = String(i);
            game_playerIDs.push(id);
            game_aiPlayers.push(id);
            game_playerNames[id] = 'Computer Player ' + id;
        }

        // set local game handlers
        movePostFunction = localMovePostFunc;
        moveProcessingFunction = localMoveProcessingFunc;

        // call the specified game's start function
        game_catalog[game].startFunc();
    }
}